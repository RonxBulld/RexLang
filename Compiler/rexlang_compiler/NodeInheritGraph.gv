digraph G {
    rankdir=LR;
    node[shape=box];
    "SourceFile" -> "Node";
    "IdentDef" -> "Node";
    "Decl" -> "Node";
    "Statement" -> "Node";
    "TranslateUnit" -> "Node";
    "ProgramSetFile" -> "SourceFile";
    "GlobalVariableFile" -> "SourceFile";
    "DataStructureFile" -> "SourceFile";
    "APIDeclareFile" -> "SourceFile";
    "ConstDeclareFile" -> "SourceFile";
    "TagDecl" -> "Decl";
    "BaseVariDecl" -> "TagDecl";
    "ConstDecl" -> "TagDecl";
    "TypeDecl" -> "TagDecl";
    "ProgSetDecl" -> "TagDecl";
    "ParameterDecl" -> "BaseVariDecl";
    "VariableDecl" -> "BaseVariDecl";
    "GlobalVariableDecl" -> "VariableDecl";
    "MemberVariableDecl" -> "VariableDecl";
    "FileVariableDecl" -> "VariableDecl";
    "LocalVariableDecl" -> "VariableDecl";
    "VariTypeDecl" -> "TypeDecl";
    "FunctorDecl" -> "TypeDecl";
    "ReferenceType" -> "VariTypeDecl";
    "BuiltinTypeDecl" -> "VariTypeDecl";
    "StructureDecl" -> "VariTypeDecl";
    "ArrayDecl" -> "VariTypeDecl";
    "BuiltinVoidType" -> "BuiltinTypeDecl";
    "BuiltinCommonType" -> "BuiltinTypeDecl";
    "BuiltinCharType" -> "BuiltinTypeDecl";
    "BuiltinIntegerType" -> "BuiltinTypeDecl";
    "BuiltinFloatType" -> "BuiltinTypeDecl";
    "BuiltinBoolType" -> "BuiltinTypeDecl";
    "BuiltinStringType" -> "BuiltinTypeDecl";
    "BuiltinDataSetType" -> "BuiltinTypeDecl";
    "BuiltinShortType" -> "BuiltinTypeDecl";
    "BuiltinLongType" -> "BuiltinTypeDecl";
    "BuiltinDatetimeType" -> "BuiltinTypeDecl";
    "BuiltinFuncPtrType" -> "BuiltinTypeDecl";
    "BuiltinDoubleType" -> "BuiltinTypeDecl";
    "FunctionDecl" -> "FunctorDecl";
    "APICommandDecl" -> "FunctorDecl";
    "AssignStmt" -> "Statement";
    "ControlStmt" -> "Statement";
    "IfStmt" -> "Statement";
    "LoopStatement" -> "Statement";
    "StatementBlock" -> "Statement";
    "Expression" -> "Statement";
    "LoopControlStmt" -> "ControlStmt";
    "ReturnStmt" -> "ControlStmt";
    "ExitStmt" -> "ControlStmt";
    "ContinueStmt" -> "LoopControlStmt";
    "BreakStmt" -> "LoopControlStmt";
    "WhileStmt" -> "LoopStatement";
    "RangeForStmt" -> "LoopStatement";
    "ForStmt" -> "LoopStatement";
    "DoWhileStmt" -> "LoopStatement";
    "HierarchyIdentifier" -> "Expression";
    "NameComponent" -> "Expression";
    "TypeConvert" -> "Expression";
    "_OperatorExpression" -> "Expression";
    "ResourceRefExpression" -> "Expression";
    "FuncAddrExpression" -> "Expression";
    "Value" -> "Expression";
    "IdentRefer" -> "NameComponent";
    "ArrayIndex" -> "NameComponent";
    "FunctionCall" -> "NameComponent";
    "UnaryExpression" -> "_OperatorExpression";
    "BinaryExpression" -> "_OperatorExpression";
    "ValueOfDataSet" -> "Value";
    "ValueOfDatetime" -> "Value";
    "ValueOfBool" -> "Value";
    "ValueOfDecimal" -> "Value";
    "ValueOfString" -> "Value";

    "Node"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">Node</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">* setParent(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">* setChild(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getTranslateUnit(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getAstContext(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getNearstScope(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getParent(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLocation(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFileName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLeftLine(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLeftColumn(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getRightLine(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getRightColumn(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ findDeclWithNameString(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ sematicAnalysisInternal(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- node_id_ : size_t</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- ast_context_ : ASTContext *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- parent_scope_ : Node *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- parent_node_ : Node *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- node_type_ : NodeType</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- location_start_ : size_t</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- location_end_ : size_t</td></tr>
        </table>>
    ];
    "SourceFile"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">SourceFile</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isProgramSetFile(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isGlobalVariableFile(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isDataStructureFile(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isAPIDeclareFile(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isConstDeclareFile(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ registResourceTo(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "ProgramSetFile"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ProgramSetFile</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendReferenceLibName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendProgramSetDecl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getProgramSetDecl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getRefLibs(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- libraries_ : vector&lt;TString&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- program_set_declares_ : ProgSetDecl *</td></tr>
        </table>>
    ];
    "GlobalVariableFile"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">GlobalVariableFile</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendGlobalVariableDecl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getGlobalVariMap(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- global_variable_map_ : GlobalVariableFile::GlobalVariMapTy</td></tr>
        </table>>
    ];
    "DataStructureFile"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">DataStructureFile</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendStructureDecl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getTypes(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- structure_decl_map_ : DataStructureFile::StructDeclMapTy</td></tr>
        </table>>
    ];
    "APIDeclareFile"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">APIDeclareFile</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendAPIDeclare(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getAPIDefMap(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- api_declares_ : APIDeclareFile::DllDefMapTy</td></tr>
        </table>>
    ];
    "ConstDeclareFile"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ConstDeclareFile</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendConstDeclare(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getConstDeclMap(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- consts_declares_ : ConstDeclareFile::ConstDeclMapTy</td></tr>
        </table>>
    ];
    "IdentDef"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">IdentDef</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ name(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ decl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addReference(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ removeReference(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getReferenceTable(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- id_ : StringRef</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- reference_table_ : set&lt;IdentRefer *&gt;</td></tr>
        </table>>
    ];
    "Decl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">Decl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ applyAttribute(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ applyAttributes(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setAccessLevel(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getAccessLevel(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- access_level_ : AccessLevel</td></tr>
        </table>>
    ];
    "TagDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">TagDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getNameStr(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setComment(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getComment(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getCommentStr(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getReferenceTable(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addReference(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ removeReference(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- name_ : IdentDef *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- comment_ : TString</td></tr>
        </table>>
    ];
    "BaseVariDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BaseVariDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ updateType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- type_name_ : IdentRefer *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- type_ : VariTypeDecl *</td></tr>
        </table>>
    ];
    "ParameterDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ParameterDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isDynamicParam(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ enableReference(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getParamIndex(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isNullable(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isArray(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ shouldBeReference(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- is_nullable_ : _Bool</td></tr>
        </table>>
    ];
    "ConstDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ConstDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- const_value_ : Value *</td></tr>
        </table>>
    ];
    "VariableDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">VariableDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "GlobalVariableDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">GlobalVariableDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "MemberVariableDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">MemberVariableDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ shouldBeReference(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ indexOfStruct(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- is_reference_ : _Bool</td></tr>
        </table>>
    ];
    "FileVariableDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">FileVariableDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "LocalVariableDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">LocalVariableDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isStatic(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- is_static_ : _Bool</td></tr>
        </table>>
    ];
    "TypeDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">TypeDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isVoidType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isCommonType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isCharType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isIntegerType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isFloatType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isBoolType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isStringType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isDataSetType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isShortType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isLongType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isDatetimeType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isFuncPtrType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isDoubleType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isStructType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isExtendBooleanType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isNumerical(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isIntegerClass(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isArrayType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isFunctionType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isAPICommandType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isCallable(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isIndexable(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isFixedDimensions(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ evalIndexedElementTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getDimensions(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isUnyOptValid(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isBinOptValid(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isAssginValidFrom(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "VariTypeDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">VariTypeDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getArrayToWithDimStr(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- is_reference_ : _Bool</td></tr>
        </table>>
    ];
    "ReferenceType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ReferenceType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ get(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ get(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getPointee(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- type_name_ : IdentRefer *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- pointee_type_ : TypeDecl *</td></tr>
        </table>>
    ];
    "BuiltinTypeDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinTypeDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetBuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetTypeText(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "BuiltinVoidType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinVoidType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinCommonType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinCommonType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinCharType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinCharType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinIntegerType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinIntegerType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinFloatType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinFloatType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinBoolType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinBoolType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinStringType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinStringType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinDataSetType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinDataSetType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinShortType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinShortType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinLongType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinLongType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinDatetimeType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinDatetimeType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinFuncPtrType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinFuncPtrType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "BuiltinDoubleType"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BuiltinDoubleType</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ BuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ TypeText(...)</td></tr>
        </table>>
    ];
    "StructureDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">StructureDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendElement(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getElementWithIndex(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getElementWithName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isMemberOfThis(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ indexMemberOfThis(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- members_ : NamedOrderDict&lt;MemberVariableDecl *&gt;</td></tr>
        </table>>
    ];
    "ArrayDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ArrayDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ get(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ get(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- base_type_ : TypeDecl *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- dimensions_ : vector&lt;size_t&gt;</td></tr>
        </table>>
    ];
    "FunctorDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">FunctorDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendParameter(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getParameters(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getParameterAt(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getParamByName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getIndexOf(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getReturnType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isDynamicArgs(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isStaticLibraryAPI(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isDynamicLibraryAPI(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- return_type_ : IdentRefer *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- parameters_ : vector&lt;ParameterDecl *&gt;</td></tr>
        </table>>
    ];
    "FunctionDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">FunctionDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendLocalVariable(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setStatementBlock(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLocalVari(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getParameter(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFunctionBody(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- local_vari_ : NamedOrderDict&lt;LocalVariableDecl *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- statement_list_ : StatementBlock *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- super_set_ : ProgSetDecl *</td></tr>
        </table>>
    ];
    "APICommandDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">APICommandDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLibraryName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLibraryName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLibraryType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLibraryType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getApiNameRef(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setApiNameRef(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getArguPassModel(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setArguPassModel(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- library_file_ : TString</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- library_type_ : LibraryType</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- api_name_ : IdentDef *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- argument_pass_model_ : ArgumentPassModel</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- mapping_names_ : vector&lt;StringRef&gt;</td></tr>
        </table>>
    ];
    "ProgSetDecl"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ProgSetDecl</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendFileStaticVari(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendFunctionDecl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFileVariableDecl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFunctionDecl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFuncSignatures(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- file_static_variables_ : NamedOrderDict&lt;FileVariableDecl *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- function_decls_ : NamedOrderDict&lt;FunctionDecl *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- signature_of_functions_ : NamedOrderDict&lt;FunctorDecl *&gt;</td></tr>
        </table>>
    ];
    "Statement"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">Statement</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">* getSubExprAccessType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "AssignStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">AssignStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLHS(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setRHS(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLHS(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getRHS(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- lhs_ : HierarchyIdentifier *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- rhs_ : Expression *</td></tr>
        </table>>
    ];
    "ControlStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ControlStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "LoopControlStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">LoopControlStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setControlledLoop(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getControlledLoop(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- controlled_loop_ : LoopStatement *</td></tr>
        </table>>
    ];
    "ContinueStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ContinueStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "BreakStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BreakStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "ReturnStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ReturnStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setReturnValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getReturnValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- return_value_ : Expression *</td></tr>
        </table>>
    ];
    "ExitStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ExitStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "IfStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">IfStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendBranch(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setDefault(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ branchesCount(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ conditionAt(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ branchBodyAt(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ defaultBody(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- switches_ : vector&lt;pair&lt;Expression *, Statement *&gt; &gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- default_statement_ : Statement *</td></tr>
        </table>>
    ];
    "LoopStatement"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">LoopStatement</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLoopBody(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLoopBody(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- loop_body_ : Statement *</td></tr>
        </table>>
    ];
    "WhileStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">WhileStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLoopCondition(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLoopCondition(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- condition_ : Expression *</td></tr>
        </table>>
    ];
    "RangeForStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">RangeForStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setRangeSize(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLoopVariable(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getRangeSize(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLoopVari(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- range_size_ : Expression *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- loop_vari_ : HierarchyIdentifier *</td></tr>
        </table>>
    ];
    "ForStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ForStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setStartValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setStopValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setStepValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLoopVari(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getStartValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getStopValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getStepValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLoopVari(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- start_value_ : Expression *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- stop_value_ : Expression *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- step_value_ : Expression *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- loop_vari_ : HierarchyIdentifier *</td></tr>
        </table>>
    ];
    "DoWhileStmt"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">DoWhileStmt</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setCondition(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getCondition(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- condition_ : Expression *</td></tr>
        </table>>
    ];
    "StatementBlock"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">StatementBlock</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendStatement(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getStatements(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- statements_ : vector&lt;Statement *&gt;</td></tr>
        </table>>
    ];
    "Expression"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">Expression</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">* CheckExpressionInternal(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">* getExpressionTypeInternal(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ CheckExpression(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getExpressionType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getExpressionType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLRType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isLeftUsage(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isRightUsage(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ castTo(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- expression_type_ : TypeDecl *</td></tr>
        </table>>
    ];
    "HierarchyIdentifier"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">HierarchyIdentifier</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ AppendComponent(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- name_components_ : vector&lt;NameComponent *&gt;</td></tr>
        </table>>
    ];
    "NameComponent"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">NameComponent</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ SetForward(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ SetBackward(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ Forward(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ Backward(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ EvalBaseNameComponentType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getBaseId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- forward_name_component_ : NameComponent *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- backward_name_component_ : NameComponent *</td></tr>
        </table>>
    ];
    "IdentRefer"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">IdentRefer</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ def(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getDecl(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- reference_ : IdentDef *</td></tr>
        </table>>
    ];
    "ArrayIndex"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ArrayIndex</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setBaseComponent(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setIndexExpr(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getIndexBase(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getElementTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getIndexesList(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- base_ : NameComponent *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- index_ : Expression *</td></tr>
        </table>>
    ];
    "FunctionCall"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">FunctionCall</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ matchFunctor(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setCallName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendArgument(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getCallee(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFunctionDeclare(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getArgumentsCount(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getArgumentAt(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getArguments(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isArgument(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ isArgument(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ indexOfArgument(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ indexOfArgument(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- function_name_ : NameComponent *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- arguments_ : vector&lt;Expression *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- functor_declare_ : FunctorDecl *</td></tr>
        </table>>
    ];
    "TypeConvert"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">TypeConvert</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getSourceExpr(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getSourceType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getTargetType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- convert_type_ : TypeConvert::ConvertType</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- from_expression_ : Expression *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- target_type_ : TypeDecl *</td></tr>
        </table>>
    ];
    "_OperatorExpression"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">_OperatorExpression</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setOperatorText(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setOperator(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setOperator(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getOperator(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- operator_type_ : OperatorType</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- operator_ : TString</td></tr>
        </table>>
    ];
    "UnaryExpression"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">UnaryExpression</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setOperand(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- operand_value_ : Expression *</td></tr>
        </table>>
    ];
    "BinaryExpression"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">BinaryExpression</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setLHS(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setRHS(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ IsBinaryOperateValid(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getBinaryOperateUpgradeType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- lhs_ : Expression *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- rhs_ : Expression *</td></tr>
        </table>>
    ];
    "ResourceRefExpression"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ResourceRefExpression</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setResourceName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- resource_name_ : TString</td></tr>
        </table>>
    ];
    "FuncAddrExpression"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">FuncAddrExpression</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setRefFuncName(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- function_name_ : IdentRefer *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- functor_declare_ : FunctorDecl *</td></tr>
        </table>>
    ];
    "Value"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">Value</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
        </table>>
    ];
    "ValueOfDataSet"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ValueOfDataSet</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendElement(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- elements_ : vector&lt;Expression *&gt;</td></tr>
        </table>>
    ];
    "ValueOfDatetime"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ValueOfDatetime</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setTime(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- time_ : time_t</td></tr>
        </table>>
    ];
    "ValueOfBool"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ValueOfBool</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setBool(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- value_ : _Bool</td></tr>
        </table>>
    ];
    "ValueOfDecimal"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ValueOfDecimal</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setIntValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setFloatValue(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">-  : union ValueOfDecimal::(anonymous at /home/rexfield/RexLang/Compiler/rexlang_compiler/NodeDecl.h:1909:9)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- type_ : type</td></tr>
        </table>>
    ];
    "ValueOfString"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">ValueOfString</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setStringLiteral(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- string_literal_ : TString</td></tr>
        </table>>
    ];
    "TranslateUnit"
    [
        shape=none
        label=<<table border="0" cellspacing="0">
            <tr><td port="head" border="1" bgcolor="pink">TranslateUnit</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">- setMainEnrty(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ appendSourceFile(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ merge(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addFunctor(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addProgSet(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addGlobalVari(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addConstVal(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addRefLib(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ addPlaceholder(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getGlobalVari(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFunctor(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getConst(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getOrCreateType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ setSourceEdition(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getSourceEdition(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getReferenceLibraries(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getMainEntry(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">- RegistBuiltinType(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ InitBuiltinTypes(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getBuiltinTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getVoidTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getCommonTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getCharTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getIntegerTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFloatTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getBoolTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getStringTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getDataSetTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getShortTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getLongTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getDatetimeTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getFuncPtrTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ getDoubleTy(...)</td></tr>
            <tr><td border="1" bgcolor="AliceBlue">+ GetClassId(...)</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- edition_ : unsigned int</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- source_files_ : vector&lt;SourceFile *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- global_type_ : NamedOrderDict&lt;TypeDecl *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- global_variables_ : NamedOrderDict&lt;GlobalVariableDecl *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- libraries_list_ : set&lt;TString&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- functor_declares_ : NamedOrderDict&lt;FunctorDecl *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- consts_declares_ : NamedOrderDict&lt;ConstDecl *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- program_sets_ : NamedOrderDict&lt;ProgSetDecl *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- placeholders_ : NamedOrderDict&lt;IdentDef *&gt;</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- main_entry_ : FunctorDecl *</td></tr>
            <tr><td border="1" bgcolor="AntiqueWhite">- builtin_type_map_ : ordered_map&lt;EnumOfBuiltinType, BuiltinTypeDecl *&gt;</td></tr>
        </table>>
    ];
}
