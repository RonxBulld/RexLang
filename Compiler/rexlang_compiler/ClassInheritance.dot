digraph G {
	rankdir=LR;
	node[shape=box];

	# Class inheritance link.
	"rexlang::SourceFile" -> "rexlang::Node"
	"rexlang::ProgramSetFile" -> "rexlang::SourceFile"
	"rexlang::GlobalVariableFile" -> "rexlang::SourceFile"
	"rexlang::DataStructureFile" -> "rexlang::SourceFile"
	"rexlang::DllDefineFile" -> "rexlang::SourceFile"
	"rexlang::Decl" -> "rexlang::Node"
	"rexlang::TagDecl" -> "rexlang::Decl"
	"rexlang::BaseVariDecl" -> "rexlang::TagDecl"
	"rexlang::ParameterDecl" -> "rexlang::BaseVariDecl"
	"rexlang::VariableDecl" -> "rexlang::BaseVariDecl"
	"rexlang::GlobalVariableDecl" -> "rexlang::VariableDecl"
	"rexlang::MemberVariableDecl" -> "rexlang::VariableDecl"
	"rexlang::FileVariableDecl" -> "rexlang::VariableDecl"
	"rexlang::LocalVariableDecl" -> "rexlang::VariableDecl"
	"rexlang::TypeDecl" -> "rexlang::TagDecl"
	"rexlang::BuiltinTypeDecl" -> "rexlang::TypeDecl"
	"rexlang::StructureDecl" -> "rexlang::TypeDecl"
	"rexlang::ArrayDecl" -> "rexlang::TypeDecl"
	"rexlang::FunctorDecl" -> "rexlang::TypeDecl"
	"rexlang::FunctionDecl" -> "rexlang::FunctorDecl"
	"rexlang::DllCommandDecl" -> "rexlang::FunctorDecl"
	"rexlang::ProgSetDecl" -> "rexlang::TagDecl"
	"rexlang::Statement" -> "rexlang::Node"
	"rexlang::AssignStmt" -> "rexlang::Statement"
	"rexlang::ControlStmt" -> "rexlang::Statement"
	"rexlang::LoopControlStmt" -> "rexlang::ControlStmt"
	"rexlang::ContinueStmt" -> "rexlang::LoopControlStmt"
	"rexlang::BreakStmt" -> "rexlang::LoopControlStmt"
	"rexlang::ReturnStmt" -> "rexlang::ControlStmt"
	"rexlang::ExitStmt" -> "rexlang::ControlStmt"
	"rexlang::IfStmt" -> "rexlang::Statement"
	"rexlang::LoopStatement" -> "rexlang::Statement"
	"rexlang::WhileStmt" -> "rexlang::LoopStatement"
	"rexlang::RangeForStmt" -> "rexlang::LoopStatement"
	"rexlang::ForStmt" -> "rexlang::LoopStatement"
	"rexlang::DoWhileStmt" -> "rexlang::LoopStatement"
	"rexlang::StatementBlock" -> "rexlang::Statement"
	"rexlang::Expression" -> "rexlang::Statement"
	"rexlang::HierarchyIdentifier" -> "rexlang::Expression"
	"rexlang::NameComponent" -> "rexlang::Expression"
	"rexlang::Identifier" -> "rexlang::NameComponent"
	"rexlang::ArrayIndex" -> "rexlang::NameComponent"
	"rexlang::FunctionCall" -> "rexlang::NameComponent"
	"rexlang::TypeConvert" -> "rexlang::Expression"
	"rexlang::_OperatorExpression" -> "rexlang::Expression"
	"rexlang::UnaryExpression" -> "rexlang::_OperatorExpression"
	"rexlang::BinaryExpression" -> "rexlang::_OperatorExpression"
	"rexlang::Value" -> "rexlang::Expression"
	"rexlang::ValueOfDataSet" -> "rexlang::Value"
	"rexlang::ValueOfDatetime" -> "rexlang::Value"
	"rexlang::ResourceRefExpression" -> "rexlang::Expression"
	"rexlang::FuncAddrExpression" -> "rexlang::Expression"
	"rexlang::ValueOfBool" -> "rexlang::Value"
	"rexlang::ValueOfDecimal" -> "rexlang::Value"
	"rexlang::ValueOfString" -> "rexlang::Value"
	"rexlang::TranslateUnit" -> "rexlang::Node"
	"rexlang::Node"[shape=ellipse fillcolor=gold style=filled];
}
